{"version":3,"names":["createNavigatorFactory","StackActions","StackRouter","useNavigationBuilder","React","warnOnce","StackView","StackNavigator","id","initialRouteName","children","screenListeners","screenOptions","rest","mode","headerMode","keyboardHandlingEnabled","undefined","defaultScreenOptions","presentation","headerShown","state","descriptors","navigation","NavigationContent","useEffect","addListener","e","isFocused","requestAnimationFrame","index","defaultPrevented","dispatch","popToTop","target","key"],"sources":["createStackNavigator.tsx"],"sourcesContent":["import {\r\n  createNavigatorFactory,\r\n  DefaultNavigatorOptions,\r\n  EventArg,\r\n  ParamListBase,\r\n  StackActionHelpers,\r\n  StackActions,\r\n  StackNavigationState,\r\n  StackRouter,\r\n  StackRouterOptions,\r\n  useNavigationBuilder,\r\n} from '@react-navigation/native';\r\nimport * as React from 'react';\r\nimport warnOnce from 'warn-once';\r\n\r\nimport type {\r\n  StackHeaderMode,\r\n  StackNavigationConfig,\r\n  StackNavigationEventMap,\r\n  StackNavigationOptions,\r\n} from '../types';\r\nimport StackView from '../views/Stack/StackView';\r\n\r\ntype Props = DefaultNavigatorOptions<\r\n  ParamListBase,\r\n  StackNavigationState<ParamListBase>,\r\n  StackNavigationOptions,\r\n  StackNavigationEventMap\r\n> &\r\n  StackRouterOptions &\r\n  StackNavigationConfig;\r\n\r\nfunction StackNavigator({\r\n  id,\r\n  initialRouteName,\r\n  children,\r\n  screenListeners,\r\n  screenOptions,\r\n  ...rest\r\n}: Props) {\r\n  // @ts-expect-error: mode is deprecated\r\n  const mode = rest.mode as 'card' | 'modal' | undefined;\r\n\r\n  warnOnce(\r\n    mode != null,\r\n    `Stack Navigator: 'mode=\"${mode}\"' is deprecated. Use 'presentation: \"${mode}\"' in 'screenOptions' instead.\\n\\nSee https://reactnavigation.org/docs/stack-navigator#presentation for more details.`\r\n  );\r\n\r\n  // @ts-expect-error: headerMode='none' is deprecated\r\n  const headerMode = rest.headerMode as StackHeaderMode | 'none' | undefined;\r\n\r\n  warnOnce(\r\n    headerMode === 'none',\r\n    `Stack Navigator: 'headerMode=\"none\"' is deprecated. Use 'headerShown: false' in 'screenOptions' instead.\\n\\nSee https://reactnavigation.org/docs/stack-navigator/#headershown for more details.`\r\n  );\r\n\r\n  warnOnce(\r\n    headerMode != null && headerMode !== 'none',\r\n    `Stack Navigator: 'headerMode' is moved to 'options'. Moved it to 'screenOptions' to keep current behavior.\\n\\nSee https://reactnavigation.org/docs/stack-navigator/#headermode for more details.`\r\n  );\r\n\r\n  // @ts-expect-error: headerMode='none' is deprecated\r\n  const keyboardHandlingEnabled = rest.keyboardHandlingEnabled;\r\n\r\n  warnOnce(\r\n    keyboardHandlingEnabled !== undefined,\r\n    `Stack Navigator: 'keyboardHandlingEnabled' is moved to 'options'. Moved it to 'screenOptions' to keep current behavior.\\n\\nSee https://reactnavigation.org/docs/stack-navigator/#keyboardhandlingenabled for more details.`\r\n  );\r\n\r\n  const defaultScreenOptions: StackNavigationOptions = {\r\n    presentation: mode,\r\n    headerShown: headerMode ? headerMode !== 'none' : true,\r\n    headerMode: headerMode && headerMode !== 'none' ? headerMode : undefined,\r\n    keyboardHandlingEnabled,\r\n  };\r\n\r\n  const { state, descriptors, navigation, NavigationContent } =\r\n    useNavigationBuilder<\r\n      StackNavigationState<ParamListBase>,\r\n      StackRouterOptions,\r\n      StackActionHelpers<ParamListBase>,\r\n      StackNavigationOptions,\r\n      StackNavigationEventMap\r\n    >(StackRouter, {\r\n      id,\r\n      initialRouteName,\r\n      children,\r\n      screenListeners,\r\n      screenOptions,\r\n      defaultScreenOptions,\r\n    });\r\n\r\n  React.useEffect(\r\n    () =>\r\n      // @ts-expect-error: there may not be a tab navigator in parent\r\n      navigation.addListener?.('tabPress', (e) => {\r\n        const isFocused = navigation.isFocused();\r\n\r\n        // Run the operation in the next frame so we're sure all listeners have been run\r\n        // This is necessary to know if preventDefault() has been called\r\n        requestAnimationFrame(() => {\r\n          if (\r\n            state.index > 0 &&\r\n            isFocused &&\r\n            !(e as unknown as EventArg<'tabPress', true>).defaultPrevented\r\n          ) {\r\n            // When user taps on already focused tab and we're inside the tab,\r\n            // reset the stack to replicate native behaviour\r\n            navigation.dispatch({\r\n              ...StackActions.popToTop(),\r\n              target: state.key,\r\n            });\r\n          }\r\n        });\r\n      }),\r\n    [navigation, state.index, state.key]\r\n  );\r\n\r\n  return (\r\n    <NavigationContent>\r\n      <StackView\r\n        {...rest}\r\n        state={state}\r\n        descriptors={descriptors}\r\n        navigation={navigation}\r\n      />\r\n    </NavigationContent>\r\n  );\r\n}\r\n\r\nexport default createNavigatorFactory<\r\n  StackNavigationState<ParamListBase>,\r\n  StackNavigationOptions,\r\n  StackNavigationEventMap,\r\n  typeof StackNavigator\r\n>(StackNavigator);\r\n"],"mappings":";;AAAA,SACEA,sBADF,EAMEC,YANF,EAQEC,WARF,EAUEC,oBAVF,QAWO,0BAXP;AAYA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAQA,OAAOC,SAAP,MAAsB,0BAAtB;;AAWA,SAASC,cAAT,OAOU;EAAA,IAPc;IACtBC,EADsB;IAEtBC,gBAFsB;IAGtBC,QAHsB;IAItBC,eAJsB;IAKtBC,aALsB;IAMtB,GAAGC;EANmB,CAOd;EACR;EACA,MAAMC,IAAI,GAAGD,IAAI,CAACC,IAAlB;EAEAT,QAAQ,CACNS,IAAI,IAAI,IADF,EAEL,2BAA0BA,IAAK,yCAAwCA,IAAK,uHAFvE,CAAR,CAJQ,CASR;;EACA,MAAMC,UAAU,GAAGF,IAAI,CAACE,UAAxB;EAEAV,QAAQ,CACNU,UAAU,KAAK,MADT,EAEL,iMAFK,CAAR;EAKAV,QAAQ,CACNU,UAAU,IAAI,IAAd,IAAsBA,UAAU,KAAK,MAD/B,EAEL,kMAFK,CAAR,CAjBQ,CAsBR;;EACA,MAAMC,uBAAuB,GAAGH,IAAI,CAACG,uBAArC;EAEAX,QAAQ,CACNW,uBAAuB,KAAKC,SADtB,EAEL,4NAFK,CAAR;EAKA,MAAMC,oBAA4C,GAAG;IACnDC,YAAY,EAAEL,IADqC;IAEnDM,WAAW,EAAEL,UAAU,GAAGA,UAAU,KAAK,MAAlB,GAA2B,IAFC;IAGnDA,UAAU,EAAEA,UAAU,IAAIA,UAAU,KAAK,MAA7B,GAAsCA,UAAtC,GAAmDE,SAHZ;IAInDD;EAJmD,CAArD;EAOA,MAAM;IAAEK,KAAF;IAASC,WAAT;IAAsBC,UAAtB;IAAkCC;EAAlC,IACJrB,oBAAoB,CAMlBD,WANkB,EAML;IACbM,EADa;IAEbC,gBAFa;IAGbC,QAHa;IAIbC,eAJa;IAKbC,aALa;IAMbM;EANa,CANK,CADtB;EAgBAd,KAAK,CAACqB,SAAN,CACE;IAAA;;IAAA,OACE;MADF,yBAEEF,UAAU,CAACG,WAFb,0DAEE,2BAAAH,UAAU,EAAe,UAAf,EAA4BI,CAAD,IAAO;QAC1C,MAAMC,SAAS,GAAGL,UAAU,CAACK,SAAX,EAAlB,CAD0C,CAG1C;QACA;;QACAC,qBAAqB,CAAC,MAAM;UAC1B,IACER,KAAK,CAACS,KAAN,GAAc,CAAd,IACAF,SADA,IAEA,CAAED,CAAD,CAA6CI,gBAHhD,EAIE;YACA;YACA;YACAR,UAAU,CAACS,QAAX,CAAoB,EAClB,GAAG/B,YAAY,CAACgC,QAAb,EADe;cAElBC,MAAM,EAAEb,KAAK,CAACc;YAFI,CAApB;UAID;QACF,CAboB,CAArB;MAcD,CAnBS;IAFZ;EAAA,CADF,EAuBE,CAACZ,UAAD,EAAaF,KAAK,CAACS,KAAnB,EAA0BT,KAAK,CAACc,GAAhC,CAvBF;EA0BA,oBACE,oBAAC,iBAAD,qBACE,oBAAC,SAAD,eACMtB,IADN;IAEE,KAAK,EAAEQ,KAFT;IAGE,WAAW,EAAEC,WAHf;IAIE,UAAU,EAAEC;EAJd,GADF,CADF;AAUD;;AAED,eAAevB,sBAAsB,CAKnCO,cALmC,CAArC"}