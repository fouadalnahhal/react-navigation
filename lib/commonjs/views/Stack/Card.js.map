{"version":3,"names":["GESTURE_VELOCITY_IMPACT","TRUE","FALSE","GESTURE_RESPONSE_DISTANCE_HORIZONTAL","GESTURE_RESPONSE_DISTANCE_VERTICAL","useNativeDriver","Platform","OS","hasOpacityStyle","style","flattenedStyle","StyleSheet","flatten","opacity","Card","React","Component","Animated","Value","getInvertedMultiplier","props","gestureDirection","width","layout","height","closing","velocity","gesture","transitionSpec","onOpen","onClose","onTransition","toValue","getAnimateToValue","lastToValue","isClosing","setValue","spec","close","open","animation","spring","timing","setPointerEventsEnabled","handleStartInteraction","clearTimeout","pendingGestureCallback","undefined","config","isInteraction","start","finished","handleEndInteraction","isCurrentlyMounted","forceUpdate","getDistanceForDirection","enabled","pointerEvents","contentRef","current","setNativeProps","interactionHandle","InteractionManager","createInteractionHandle","clearInteractionHandle","nativeEvent","onGestureBegin","onGestureCanceled","onGestureEnd","gestureVelocityImpact","state","GestureState","ACTIVE","isSwiping","CANCELLED","velocityY","velocityX","animate","END","distance","translation","translationY","translationX","setTimeout","memoize","styleInterpolator","interpolationIndex","next","insetTop","insetRight","insetBottom","insetLeft","index","progress","swiping","inverted","layouts","screen","insets","top","right","bottom","left","createRef","componentDidMount","componentDidUpdate","prevProps","componentWillUnmount","stopAnimation","gestureActivationCriteria","gestureResponseDistance","enableTrackpadTwoFingerGesture","maxDeltaX","minOffsetY","hitSlop","invertedMultiplier","minOffsetX","maxDeltaY","render","overlay","overlayEnabled","shadowEnabled","gestureEnabled","pageOverflowEnabled","headerDarkContent","children","containerStyle","customContainerStyle","contentStyle","rest","interpolationProps","getCardAnimation","interpolatedStyle","getInterpolatedStyle","cardStyle","overlayStyle","shadowStyle","handleGestureEvent","event","backgroundColor","isTransparent","Color","alpha","getIsModalPresentation","absoluteFill","styles","container","handleGestureStateChange","shadow","shadowHorizontal","shadowLeft","shadowRight","shadowVertical","shadowTop","shadowBottom","cardStyleInterpolator","forModalPresentationIOS","name","create","flex","position","shadowRadius","shadowColor","shadowOpacity","shadowOffset"],"sources":["Card.tsx"],"sourcesContent":["import Color from 'color';\r\nimport * as React from 'react';\r\nimport {\r\n  Animated,\r\n  InteractionManager,\r\n  Platform,\r\n  StyleProp,\r\n  StyleSheet,\r\n  View,\r\n  ViewProps,\r\n  ViewStyle,\r\n} from 'react-native';\r\nimport type { EdgeInsets } from 'react-native-safe-area-context';\r\n\r\nimport { forModalPresentationIOS } from '../../TransitionConfigs/CardStyleInterpolators';\r\nimport type {\r\n  GestureDirection,\r\n  Layout,\r\n  StackCardInterpolationProps,\r\n  StackCardStyleInterpolator,\r\n  TransitionSpec,\r\n} from '../../types';\r\nimport CardAnimationContext from '../../utils/CardAnimationContext';\r\nimport getDistanceForDirection from '../../utils/getDistanceForDirection';\r\nimport getInvertedMultiplier from '../../utils/getInvertedMultiplier';\r\nimport memoize from '../../utils/memoize';\r\nimport {\r\n  GestureState,\r\n  PanGestureHandler,\r\n  PanGestureHandlerGestureEvent,\r\n} from '../GestureHandler';\r\nimport ModalStatusBarManager from '../ModalStatusBarManager';\r\nimport CardSheet from './CardSheet';\r\n\r\ntype Props = ViewProps & {\r\n  interpolationIndex: number;\r\n  closing: boolean;\r\n  next?: Animated.AnimatedInterpolation;\r\n  current: Animated.AnimatedInterpolation;\r\n  gesture: Animated.Value;\r\n  layout: Layout;\r\n  insets: EdgeInsets;\r\n  headerDarkContent: boolean | undefined;\r\n  pageOverflowEnabled: boolean;\r\n  gestureDirection: GestureDirection;\r\n  onOpen: () => void;\r\n  onClose: () => void;\r\n  onTransition: (props: { closing: boolean; gesture: boolean }) => void;\r\n  onGestureBegin: () => void;\r\n  onGestureCanceled: () => void;\r\n  onGestureEnd: () => void;\r\n  children: React.ReactNode;\r\n  overlay: (props: {\r\n    style: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\r\n  }) => React.ReactNode;\r\n  overlayEnabled: boolean;\r\n  shadowEnabled: boolean;\r\n  gestureEnabled: boolean;\r\n  gestureResponseDistance?: number;\r\n  gestureVelocityImpact: number;\r\n  transitionSpec: {\r\n    open: TransitionSpec;\r\n    close: TransitionSpec;\r\n  };\r\n  styleInterpolator: StackCardStyleInterpolator;\r\n  containerStyle?: StyleProp<ViewStyle>;\r\n  contentStyle?: StyleProp<ViewStyle>;\r\n};\r\n\r\nconst GESTURE_VELOCITY_IMPACT = 0.3;\r\n\r\nconst TRUE = 1;\r\nconst FALSE = 0;\r\n\r\n/**\r\n * The distance of touch start from the edge of the screen where the gesture will be recognized\r\n */\r\nconst GESTURE_RESPONSE_DISTANCE_HORIZONTAL = 50;\r\nconst GESTURE_RESPONSE_DISTANCE_VERTICAL = 135;\r\n\r\nconst useNativeDriver = Platform.OS !== 'web';\r\n\r\nconst hasOpacityStyle = (style: any) => {\r\n  if (style) {\r\n    const flattenedStyle = StyleSheet.flatten(style);\r\n    return flattenedStyle.opacity != null;\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\nexport default class Card extends React.Component<Props> {\r\n  static defaultProps = {\r\n    shadowEnabled: false,\r\n    gestureEnabled: true,\r\n    gestureVelocityImpact: GESTURE_VELOCITY_IMPACT,\r\n    overlay: ({\r\n      style,\r\n    }: {\r\n      style: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\r\n    }) =>\r\n      style ? (\r\n        <Animated.View pointerEvents=\"none\" style={[styles.overlay, style]} />\r\n      ) : null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.animate({ closing: this.props.closing });\r\n    this.isCurrentlyMounted = true;\r\n  }\r\n\r\n  componentDidUpdate(prevProps: Props) {\r\n    const { layout, gestureDirection, closing } = this.props;\r\n    const { width, height } = layout;\r\n\r\n    if (width !== prevProps.layout.width) {\r\n      this.layout.width.setValue(width);\r\n    }\r\n\r\n    if (height !== prevProps.layout.height) {\r\n      this.layout.height.setValue(height);\r\n    }\r\n\r\n    if (gestureDirection !== prevProps.gestureDirection) {\r\n      this.inverted.setValue(getInvertedMultiplier(gestureDirection));\r\n    }\r\n\r\n    const toValue = this.getAnimateToValue(this.props);\r\n\r\n    if (\r\n      this.getAnimateToValue(prevProps) !== toValue ||\r\n      this.lastToValue !== toValue\r\n    ) {\r\n      // We need to trigger the animation when route was closed\r\n      // Thr route might have been closed by a `POP` action or by a gesture\r\n      // When route was closed due to a gesture, the animation would've happened already\r\n      // It's still important to trigger the animation so that `onClose` is called\r\n      // If `onClose` is not called, cleanup step won't be performed for gestures\r\n      this.animate({ closing });\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.gesture.stopAnimation();\r\n    this.isCurrentlyMounted = false;\r\n    this.handleEndInteraction();\r\n  }\r\n\r\n  private isCurrentlyMounted = false;\r\n\r\n  private isClosing = new Animated.Value(FALSE);\r\n\r\n  private inverted = new Animated.Value(\r\n    getInvertedMultiplier(this.props.gestureDirection)\r\n  );\r\n\r\n  private layout = {\r\n    width: new Animated.Value(this.props.layout.width),\r\n    height: new Animated.Value(this.props.layout.height),\r\n  };\r\n\r\n  private isSwiping = new Animated.Value(FALSE);\r\n\r\n  private interactionHandle: number | undefined;\r\n\r\n  private pendingGestureCallback: number | undefined;\r\n\r\n  private lastToValue: number | undefined;\r\n\r\n  private animate = ({\r\n    closing,\r\n    velocity,\r\n  }: {\r\n    closing: boolean;\r\n    velocity?: number;\r\n  }) => {\r\n    const { gesture, transitionSpec, onOpen, onClose, onTransition } =\r\n      this.props;\r\n\r\n    const toValue = this.getAnimateToValue({\r\n      ...this.props,\r\n      closing,\r\n    });\r\n\r\n    this.lastToValue = toValue;\r\n\r\n    this.isClosing.setValue(closing ? TRUE : FALSE);\r\n\r\n    const spec = closing ? transitionSpec.close : transitionSpec.open;\r\n\r\n    const animation =\r\n      spec.animation === 'spring' ? Animated.spring : Animated.timing;\r\n\r\n    this.setPointerEventsEnabled(!closing);\r\n    this.handleStartInteraction();\r\n\r\n    clearTimeout(this.pendingGestureCallback);\r\n\r\n    onTransition?.({ closing, gesture: velocity !== undefined });\r\n    animation(gesture, {\r\n      ...spec.config,\r\n      velocity,\r\n      toValue,\r\n      useNativeDriver,\r\n      isInteraction: false,\r\n    }).start(({ finished }) => {\r\n      this.handleEndInteraction();\r\n\r\n      clearTimeout(this.pendingGestureCallback);\r\n\r\n      if (finished) {\r\n        if (closing) {\r\n          onClose();\r\n        } else {\r\n          onOpen();\r\n        }\r\n\r\n        if (this.isCurrentlyMounted) {\r\n          // Make sure to re-open screen if it wasn't removed\r\n          this.forceUpdate();\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  private getAnimateToValue = ({\r\n    closing,\r\n    layout,\r\n    gestureDirection,\r\n  }: {\r\n    closing?: boolean;\r\n    layout: Layout;\r\n    gestureDirection: GestureDirection;\r\n  }) => {\r\n    if (!closing) {\r\n      return 0;\r\n    }\r\n\r\n    return getDistanceForDirection(layout, gestureDirection);\r\n  };\r\n\r\n  private setPointerEventsEnabled = (enabled: boolean) => {\r\n    const pointerEvents = enabled ? 'box-none' : 'none';\r\n\r\n    this.contentRef.current?.setNativeProps({ pointerEvents });\r\n  };\r\n\r\n  private handleStartInteraction = () => {\r\n    if (this.interactionHandle === undefined) {\r\n      this.interactionHandle = InteractionManager.createInteractionHandle();\r\n    }\r\n  };\r\n\r\n  private handleEndInteraction = () => {\r\n    if (this.interactionHandle !== undefined) {\r\n      InteractionManager.clearInteractionHandle(this.interactionHandle);\r\n      this.interactionHandle = undefined;\r\n    }\r\n  };\r\n\r\n  private handleGestureStateChange = ({\r\n    nativeEvent,\r\n  }: PanGestureHandlerGestureEvent) => {\r\n    const {\r\n      layout,\r\n      onClose,\r\n      onGestureBegin,\r\n      onGestureCanceled,\r\n      onGestureEnd,\r\n      gestureDirection,\r\n      gestureVelocityImpact,\r\n    } = this.props;\r\n\r\n    switch (nativeEvent.state) {\r\n      case GestureState.ACTIVE:\r\n        this.isSwiping.setValue(TRUE);\r\n        this.handleStartInteraction();\r\n        onGestureBegin?.();\r\n        break;\r\n      case GestureState.CANCELLED: {\r\n        this.isSwiping.setValue(FALSE);\r\n        this.handleEndInteraction();\r\n\r\n        const velocity =\r\n          gestureDirection === 'vertical' ||\r\n          gestureDirection === 'vertical-inverted'\r\n            ? nativeEvent.velocityY\r\n            : nativeEvent.velocityX;\r\n\r\n        this.animate({ closing: this.props.closing, velocity });\r\n\r\n        onGestureCanceled?.();\r\n        break;\r\n      }\r\n      case GestureState.END: {\r\n        this.isSwiping.setValue(FALSE);\r\n\r\n        let distance;\r\n        let translation;\r\n        let velocity;\r\n\r\n        if (\r\n          gestureDirection === 'vertical' ||\r\n          gestureDirection === 'vertical-inverted'\r\n        ) {\r\n          distance = layout.height;\r\n          translation = nativeEvent.translationY;\r\n          velocity = nativeEvent.velocityY;\r\n        } else {\r\n          distance = layout.width;\r\n          translation = nativeEvent.translationX;\r\n          velocity = nativeEvent.velocityX;\r\n        }\r\n\r\n        const closing =\r\n          (translation + velocity * gestureVelocityImpact) *\r\n            getInvertedMultiplier(gestureDirection) >\r\n          distance / 2\r\n            ? velocity !== 0 || translation !== 0\r\n            : this.props.closing;\r\n\r\n        this.animate({ closing, velocity });\r\n\r\n        if (closing) {\r\n          // We call onClose with a delay to make sure that the animation has already started\r\n          // This will make sure that the state update caused by this doesn't affect start of animation\r\n          this.pendingGestureCallback = setTimeout(() => {\r\n            onClose();\r\n\r\n            // Trigger an update after we dispatch the action to remove the screen\r\n            // This will make sure that we check if the screen didn't get removed so we can cancel the animation\r\n            this.forceUpdate();\r\n          }, 32) as any as number;\r\n        }\r\n\r\n        onGestureEnd?.();\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  // Memoize this to avoid extra work on re-render\r\n  private getInterpolatedStyle = memoize(\r\n    (\r\n      styleInterpolator: StackCardStyleInterpolator,\r\n      animation: StackCardInterpolationProps\r\n    ) => styleInterpolator(animation)\r\n  );\r\n\r\n  // Keep track of the animation context when deps changes.\r\n  private getCardAnimation = memoize(\r\n    (\r\n      interpolationIndex: number,\r\n      current: Animated.AnimatedInterpolation,\r\n      next: Animated.AnimatedInterpolation | undefined,\r\n      layout: Layout,\r\n      insetTop: number,\r\n      insetRight: number,\r\n      insetBottom: number,\r\n      insetLeft: number\r\n    ) => ({\r\n      index: interpolationIndex,\r\n      current: { progress: current },\r\n      next: next && { progress: next },\r\n      closing: this.isClosing,\r\n      swiping: this.isSwiping,\r\n      inverted: this.inverted,\r\n      layouts: {\r\n        screen: layout,\r\n      },\r\n      insets: {\r\n        top: insetTop,\r\n        right: insetRight,\r\n        bottom: insetBottom,\r\n        left: insetLeft,\r\n      },\r\n    })\r\n  );\r\n\r\n  private gestureActivationCriteria() {\r\n    const { layout, gestureDirection, gestureResponseDistance } = this.props;\r\n    const enableTrackpadTwoFingerGesture = true;\r\n\r\n    const distance =\r\n      gestureResponseDistance !== undefined\r\n        ? gestureResponseDistance\r\n        : gestureDirection === 'vertical' ||\r\n          gestureDirection === 'vertical-inverted'\r\n        ? GESTURE_RESPONSE_DISTANCE_VERTICAL\r\n        : GESTURE_RESPONSE_DISTANCE_HORIZONTAL;\r\n\r\n    if (gestureDirection === 'vertical') {\r\n      return {\r\n        maxDeltaX: 15,\r\n        minOffsetY: 5,\r\n        hitSlop: { bottom: -layout.height + distance },\r\n        enableTrackpadTwoFingerGesture,\r\n      };\r\n    } else if (gestureDirection === 'vertical-inverted') {\r\n      return {\r\n        maxDeltaX: 15,\r\n        minOffsetY: -5,\r\n        hitSlop: { top: -layout.height + distance },\r\n        enableTrackpadTwoFingerGesture,\r\n      };\r\n    } else {\r\n      const hitSlop = -layout.width + distance;\r\n      const invertedMultiplier = getInvertedMultiplier(gestureDirection);\r\n\r\n      if (invertedMultiplier === 1) {\r\n        return {\r\n          minOffsetX: 5,\r\n          maxDeltaY: 20,\r\n          hitSlop: { right: hitSlop },\r\n          enableTrackpadTwoFingerGesture,\r\n        };\r\n      } else {\r\n        return {\r\n          minOffsetX: -5,\r\n          maxDeltaY: 20,\r\n          hitSlop: { left: hitSlop },\r\n          enableTrackpadTwoFingerGesture,\r\n        };\r\n      }\r\n    }\r\n  }\r\n\r\n  private contentRef = React.createRef<View>();\r\n\r\n  render() {\r\n    const {\r\n      styleInterpolator,\r\n      interpolationIndex,\r\n      current,\r\n      gesture,\r\n      next,\r\n      layout,\r\n      insets,\r\n      overlay,\r\n      overlayEnabled,\r\n      shadowEnabled,\r\n      gestureEnabled,\r\n      gestureDirection,\r\n      pageOverflowEnabled,\r\n      headerDarkContent,\r\n      children,\r\n      containerStyle: customContainerStyle,\r\n      contentStyle,\r\n      ...rest\r\n    } = this.props;\r\n\r\n    const interpolationProps = this.getCardAnimation(\r\n      interpolationIndex,\r\n      current,\r\n      next,\r\n      layout,\r\n      insets.top,\r\n      insets.right,\r\n      insets.bottom,\r\n      insets.left\r\n    );\r\n\r\n    const interpolatedStyle = this.getInterpolatedStyle(\r\n      styleInterpolator,\r\n      interpolationProps\r\n    );\r\n\r\n    const { containerStyle, cardStyle, overlayStyle, shadowStyle } =\r\n      interpolatedStyle;\r\n\r\n    const handleGestureEvent = gestureEnabled\r\n      ? Animated.event(\r\n          [\r\n            {\r\n              nativeEvent:\r\n                gestureDirection === 'vertical' ||\r\n                gestureDirection === 'vertical-inverted'\r\n                  ? { translationY: gesture }\r\n                  : { translationX: gesture },\r\n            },\r\n          ],\r\n          { useNativeDriver }\r\n        )\r\n      : undefined;\r\n\r\n    const { backgroundColor } = StyleSheet.flatten(contentStyle || {});\r\n    const isTransparent =\r\n      typeof backgroundColor === 'string'\r\n        ? Color(backgroundColor).alpha() === 0\r\n        : false;\r\n\r\n    return (\r\n      <CardAnimationContext.Provider value={interpolationProps}>\r\n        {\r\n          // StatusBar messes with translucent status bar on Android\r\n          // So we should only enable it on iOS\r\n          Platform.OS === 'ios' &&\r\n          overlayEnabled &&\r\n          next &&\r\n          getIsModalPresentation(styleInterpolator) ? (\r\n            <ModalStatusBarManager\r\n              dark={headerDarkContent}\r\n              layout={layout}\r\n              insets={insets}\r\n              style={cardStyle}\r\n            />\r\n          ) : null\r\n        }\r\n        <Animated.View\r\n          style={{\r\n            // This is a dummy style that doesn't actually change anything visually.\r\n            // Animated needs the animated value to be used somewhere, otherwise things don't update properly.\r\n            // If we disable animations and hide header, it could end up making the value unused.\r\n            // So we have this dummy style that will always be used regardless of what else changed.\r\n            opacity: current,\r\n          }}\r\n          // Make sure that this view isn't removed. If this view is removed, our style with animated value won't apply\r\n          collapsable={false}\r\n        />\r\n        <View pointerEvents=\"box-none\" {...rest}>\r\n          {overlayEnabled ? (\r\n            <View pointerEvents=\"box-none\" style={StyleSheet.absoluteFill}>\r\n              {overlay({ style: overlayStyle })}\r\n            </View>\r\n          ) : null}\r\n          <Animated.View\r\n            style={[styles.container, containerStyle, customContainerStyle]}\r\n            pointerEvents=\"box-none\"\r\n          >\r\n            <PanGestureHandler\r\n              enabled={layout.width !== 0 && gestureEnabled}\r\n              onGestureEvent={handleGestureEvent}\r\n              onHandlerStateChange={this.handleGestureStateChange}\r\n              {...this.gestureActivationCriteria()}\r\n            >\r\n              <Animated.View\r\n                needsOffscreenAlphaCompositing={hasOpacityStyle(cardStyle)}\r\n                style={[styles.container, cardStyle]}\r\n              >\r\n                {shadowEnabled && shadowStyle && !isTransparent ? (\r\n                  <Animated.View\r\n                    style={[\r\n                      styles.shadow,\r\n                      gestureDirection === 'horizontal'\r\n                        ? [styles.shadowHorizontal, styles.shadowLeft]\r\n                        : gestureDirection === 'horizontal-inverted'\r\n                        ? [styles.shadowHorizontal, styles.shadowRight]\r\n                        : gestureDirection === 'vertical'\r\n                        ? [styles.shadowVertical, styles.shadowTop]\r\n                        : [styles.shadowVertical, styles.shadowBottom],\r\n                      { backgroundColor },\r\n                      shadowStyle,\r\n                    ]}\r\n                    pointerEvents=\"none\"\r\n                  />\r\n                ) : null}\r\n                <CardSheet\r\n                  ref={this.contentRef}\r\n                  enabled={pageOverflowEnabled}\r\n                  layout={layout}\r\n                  style={contentStyle}\r\n                >\r\n                  {children}\r\n                </CardSheet>\r\n              </Animated.View>\r\n            </PanGestureHandler>\r\n          </Animated.View>\r\n        </View>\r\n      </CardAnimationContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const getIsModalPresentation = (\r\n  cardStyleInterpolator: StackCardStyleInterpolator\r\n) => {\r\n  return (\r\n    cardStyleInterpolator === forModalPresentationIOS ||\r\n    // Handle custom modal presentation interpolators as well\r\n    cardStyleInterpolator.name === 'forModalPresentationIOS'\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n  overlay: {\r\n    flex: 1,\r\n    backgroundColor: '#000',\r\n  },\r\n  shadow: {\r\n    position: 'absolute',\r\n    shadowRadius: 5,\r\n    shadowColor: '#000',\r\n    shadowOpacity: 0.3,\r\n  },\r\n  shadowHorizontal: {\r\n    top: 0,\r\n    bottom: 0,\r\n    width: 3,\r\n    shadowOffset: { width: -1, height: 1 },\r\n  },\r\n  shadowLeft: {\r\n    left: 0,\r\n  },\r\n  shadowRight: {\r\n    right: 0,\r\n  },\r\n  shadowVertical: {\r\n    left: 0,\r\n    right: 0,\r\n    height: 3,\r\n    shadowOffset: { width: 1, height: -1 },\r\n  },\r\n  shadowTop: {\r\n    top: 0,\r\n  },\r\n  shadowBottom: {\r\n    bottom: 0,\r\n  },\r\n});\r\n"],"mappings":"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"}