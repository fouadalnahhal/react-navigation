{"version":3,"names":["EPSILON","STATE_INACTIVE","STATE_TRANSITIONING_OR_BELOW_TOP","STATE_ON_TOP","FALLBACK_DESCRIPTOR","Object","freeze","options","getInterpolationIndex","scenes","index","cardStyleInterpolator","descriptor","interpolationIndex","i","cardStyleInterpolatorCurrent","getIsModal","scene","isParentModal","isModalPresentation","getIsModalPresentation","isModal","getHeaderHeights","insets","isParentHeaderShown","layout","previous","reduce","acc","curr","headerStatusBarHeight","top","headerStyle","style","StyleSheet","flatten","height","route","key","getDefaultHeaderHeight","getDistanceFromOptions","presentation","gestureDirection","ModalTransition","DefaultTransition","getDistanceForDirection","getProgressFromGesture","gesture","distance","width","Math","max","interpolate","inputRange","outputRange","CardStack","React","Component","getDerivedStateFromProps","props","state","routes","descriptors","gestures","animationEnabled","Animated","Value","openingRouteKeys","includes","map","self","previousRoute","nextRoute","oldScene","currentGesture","previousGesture","undefined","nextGesture","nextDescriptor","previousDescriptor","optionsForTransitionConfig","length","defaultTransitionPreset","ModalFadeTransition","Platform","OS","gestureEnabled","transitionSpec","forNoAnimationCard","headerStyleInterpolator","cardOverlayEnabled","headerMode","header","progress","current","next","__memo","every","it","headerHeights","constructor","e","nativeEvent","setState","previousHeight","getPreviousRoute","previousScene","find","SafeAreaProviderCompat","initialMetrics","frame","render","closingRouteKeys","onOpenRoute","onCloseRoute","renderHeader","renderScene","onTransitionStart","onTransitionEnd","onGestureStart","onGestureEnd","onGestureCancel","detachInactiveScreens","focusedRoute","focusedHeaderHeight","isFloatHeaderAbsolute","slice","some","headerTransparent","headerShown","activeScreensLimit","detachPreviousScreen","lastIndexOf","forModalPresentationIOS","floatingHeader","mode","getPreviousScene","getFocusedRoute","onContentHeightChange","handleHeaderLayout","styles","floating","absolute","container","handleLayout","focused","isScreenActive","sceneForActivity","outputValue","extrapolate","headerTintColor","freezeOnBlur","safeAreaInsetTop","safeAreaInsetRight","right","safeAreaInsetBottom","bottom","safeAreaInsetLeft","left","headerHeight","headerDarkContent","Color","isDark","flattenedHeaderStyle","backgroundColor","isNextScreenTransparent","detachCurrentScreen","absoluteFill","create","flex","position","zIndex"],"sources":["CardStack.tsx"],"sourcesContent":["import {\r\n  Background,\r\n  getDefaultHeaderHeight,\r\n  SafeAreaProviderCompat,\r\n} from '@react-navigation/elements';\r\nimport type {\r\n  ParamListBase,\r\n  Route,\r\n  StackNavigationState,\r\n} from '@react-navigation/native';\r\nimport Color from 'color';\r\nimport * as React from 'react';\r\nimport {\r\n  Animated,\r\n  LayoutChangeEvent,\r\n  Platform,\r\n  StyleSheet,\r\n} from 'react-native';\r\nimport type { EdgeInsets } from 'react-native-safe-area-context';\r\n\r\nimport {\r\n  forModalPresentationIOS,\r\n  forNoAnimation as forNoAnimationCard,\r\n} from '../../TransitionConfigs/CardStyleInterpolators';\r\nimport {\r\n  DefaultTransition,\r\n  ModalFadeTransition,\r\n  ModalTransition,\r\n} from '../../TransitionConfigs/TransitionPresets';\r\nimport type {\r\n  Layout,\r\n  Scene,\r\n  StackDescriptor,\r\n  StackDescriptorMap,\r\n  StackHeaderMode,\r\n  StackNavigationOptions,\r\n} from '../../types';\r\nimport getDistanceForDirection from '../../utils/getDistanceForDirection';\r\nimport type { Props as HeaderContainerProps } from '../Header/HeaderContainer';\r\nimport { MaybeScreen, MaybeScreenContainer } from '../Screens';\r\nimport { getIsModalPresentation } from './Card';\r\nimport CardContainer from './CardContainer';\r\n\r\ntype GestureValues = {\r\n  [key: string]: Animated.Value;\r\n};\r\n\r\ntype Props = {\r\n  insets: EdgeInsets;\r\n  state: StackNavigationState<ParamListBase>;\r\n  descriptors: StackDescriptorMap;\r\n  routes: Route<string>[];\r\n  openingRouteKeys: string[];\r\n  closingRouteKeys: string[];\r\n  onOpenRoute: (props: { route: Route<string> }) => void;\r\n  onCloseRoute: (props: { route: Route<string> }) => void;\r\n  getPreviousRoute: (props: {\r\n    route: Route<string>;\r\n  }) => Route<string> | undefined;\r\n  renderHeader: (props: HeaderContainerProps) => React.ReactNode;\r\n  renderScene: (props: { route: Route<string> }) => React.ReactNode;\r\n  isParentHeaderShown: boolean;\r\n  isParentModal: boolean;\r\n  onTransitionStart: (\r\n    props: { route: Route<string> },\r\n    closing: boolean\r\n  ) => void;\r\n  onTransitionEnd: (props: { route: Route<string> }, closing: boolean) => void;\r\n  onGestureStart: (props: { route: Route<string> }) => void;\r\n  onGestureEnd: (props: { route: Route<string> }) => void;\r\n  onGestureCancel: (props: { route: Route<string> }) => void;\r\n  detachInactiveScreens?: boolean;\r\n};\r\n\r\ntype State = {\r\n  routes: Route<string>[];\r\n  descriptors: StackDescriptorMap;\r\n  scenes: Scene[];\r\n  gestures: GestureValues;\r\n  layout: Layout;\r\n  headerHeights: Record<string, number>;\r\n};\r\n\r\nconst EPSILON = 1e-5;\r\n\r\nconst STATE_INACTIVE = 0;\r\nconst STATE_TRANSITIONING_OR_BELOW_TOP = 1;\r\nconst STATE_ON_TOP = 2;\r\n\r\nconst FALLBACK_DESCRIPTOR = Object.freeze({ options: {} });\r\n\r\nconst getInterpolationIndex = (scenes: Scene[], index: number) => {\r\n  const { cardStyleInterpolator } = scenes[index].descriptor.options;\r\n\r\n  // Start from current card and count backwards the number of cards with same interpolation\r\n  let interpolationIndex = 0;\r\n\r\n  for (let i = index - 1; i >= 0; i--) {\r\n    const cardStyleInterpolatorCurrent =\r\n      scenes[i]?.descriptor.options.cardStyleInterpolator;\r\n\r\n    if (cardStyleInterpolatorCurrent !== cardStyleInterpolator) {\r\n      break;\r\n    }\r\n\r\n    interpolationIndex++;\r\n  }\r\n\r\n  return interpolationIndex;\r\n};\r\n\r\nconst getIsModal = (\r\n  scene: Scene,\r\n  interpolationIndex: number,\r\n  isParentModal: boolean\r\n) => {\r\n  if (isParentModal) {\r\n    return true;\r\n  }\r\n\r\n  const { cardStyleInterpolator } = scene.descriptor.options;\r\n  const isModalPresentation = getIsModalPresentation(cardStyleInterpolator);\r\n  const isModal = isModalPresentation && interpolationIndex !== 0;\r\n\r\n  return isModal;\r\n};\r\n\r\nconst getHeaderHeights = (\r\n  scenes: Scene[],\r\n  insets: EdgeInsets,\r\n  isParentHeaderShown: boolean,\r\n  isParentModal: boolean,\r\n  layout: Layout,\r\n  previous: Record<string, number>\r\n) => {\r\n  return scenes.reduce<Record<string, number>>((acc, curr, index) => {\r\n    const {\r\n      headerStatusBarHeight = isParentHeaderShown ? 0 : insets.top,\r\n      headerStyle,\r\n    } = curr.descriptor.options;\r\n\r\n    const style = StyleSheet.flatten(headerStyle || {});\r\n\r\n    const height =\r\n      'height' in style && typeof style.height === 'number'\r\n        ? style.height\r\n        : previous[curr.route.key];\r\n\r\n    const interpolationIndex = getInterpolationIndex(scenes, index);\r\n    const isModal = getIsModal(curr, interpolationIndex, isParentModal);\r\n\r\n    acc[curr.route.key] =\r\n      typeof height === 'number'\r\n        ? height\r\n        : getDefaultHeaderHeight(layout, isModal, headerStatusBarHeight);\r\n\r\n    return acc;\r\n  }, {});\r\n};\r\n\r\nconst getDistanceFromOptions = (\r\n  layout: Layout,\r\n  descriptor?: StackDescriptor\r\n) => {\r\n  const {\r\n    presentation,\r\n    gestureDirection = presentation === 'modal'\r\n      ? ModalTransition.gestureDirection\r\n      : DefaultTransition.gestureDirection,\r\n  } = (descriptor?.options || {}) as StackNavigationOptions;\r\n\r\n  return getDistanceForDirection(layout, gestureDirection);\r\n};\r\n\r\nconst getProgressFromGesture = (\r\n  gesture: Animated.Value,\r\n  layout: Layout,\r\n  descriptor?: StackDescriptor\r\n) => {\r\n  const distance = getDistanceFromOptions(\r\n    {\r\n      // Make sure that we have a non-zero distance, otherwise there will be incorrect progress\r\n      // This causes blank screen on web if it was previously inside container with display: none\r\n      width: Math.max(1, layout.width),\r\n      height: Math.max(1, layout.height),\r\n    },\r\n    descriptor\r\n  );\r\n\r\n  if (distance > 0) {\r\n    return gesture.interpolate({\r\n      inputRange: [0, distance],\r\n      outputRange: [1, 0],\r\n    });\r\n  }\r\n\r\n  return gesture.interpolate({\r\n    inputRange: [distance, 0],\r\n    outputRange: [0, 1],\r\n  });\r\n};\r\n\r\nexport default class CardStack extends React.Component<Props, State> {\r\n  static getDerivedStateFromProps(\r\n    props: Props,\r\n    state: State\r\n  ): Partial<State> | null {\r\n    if (\r\n      props.routes === state.routes &&\r\n      props.descriptors === state.descriptors\r\n    ) {\r\n      return null;\r\n    }\r\n\r\n    const gestures = props.routes.reduce<GestureValues>((acc, curr) => {\r\n      const descriptor = props.descriptors[curr.key];\r\n      const { animationEnabled } = descriptor?.options || {};\r\n\r\n      acc[curr.key] =\r\n        state.gestures[curr.key] ||\r\n        new Animated.Value(\r\n          props.openingRouteKeys.includes(curr.key) &&\r\n          animationEnabled !== false\r\n            ? getDistanceFromOptions(state.layout, descriptor)\r\n            : 0\r\n        );\r\n\r\n      return acc;\r\n    }, {});\r\n\r\n    const scenes = props.routes.map((route, index, self) => {\r\n      const previousRoute = self[index - 1];\r\n      const nextRoute = self[index + 1];\r\n\r\n      const oldScene = state.scenes[index];\r\n\r\n      const currentGesture = gestures[route.key];\r\n      const previousGesture = previousRoute\r\n        ? gestures[previousRoute.key]\r\n        : undefined;\r\n      const nextGesture = nextRoute ? gestures[nextRoute.key] : undefined;\r\n\r\n      const descriptor =\r\n        props.descriptors[route.key] ||\r\n        state.descriptors[route.key] ||\r\n        (oldScene ? oldScene.descriptor : FALLBACK_DESCRIPTOR);\r\n\r\n      const nextDescriptor =\r\n        props.descriptors[nextRoute?.key] || state.descriptors[nextRoute?.key];\r\n\r\n      const previousDescriptor =\r\n        props.descriptors[previousRoute?.key] ||\r\n        state.descriptors[previousRoute?.key];\r\n\r\n      // When a screen is not the last, it should use next screen's transition config\r\n      // Many transitions also animate the previous screen, so using 2 different transitions doesn't look right\r\n      // For example combining a slide and a modal transition would look wrong otherwise\r\n      // With this approach, combining different transition styles in the same navigator mostly looks right\r\n      // This will still be broken when 2 transitions have different idle state (e.g. modal presentation),\r\n      // but majority of the transitions look alright\r\n      const optionsForTransitionConfig =\r\n        index !== self.length - 1 &&\r\n        nextDescriptor &&\r\n        nextDescriptor.options.presentation !== 'transparentModal'\r\n          ? nextDescriptor.options\r\n          : descriptor.options;\r\n\r\n      let defaultTransitionPreset =\r\n        optionsForTransitionConfig.presentation === 'modal'\r\n          ? ModalTransition\r\n          : optionsForTransitionConfig.presentation === 'transparentModal'\r\n          ? ModalFadeTransition\r\n          : DefaultTransition;\r\n\r\n      const {\r\n        animationEnabled = Platform.OS !== 'web' &&\r\n          Platform.OS !== 'windows' &&\r\n          Platform.OS !== 'macos',\r\n        gestureEnabled = Platform.OS === 'ios' && animationEnabled,\r\n        gestureDirection = defaultTransitionPreset.gestureDirection,\r\n        transitionSpec = defaultTransitionPreset.transitionSpec,\r\n        cardStyleInterpolator = animationEnabled === false\r\n          ? forNoAnimationCard\r\n          : defaultTransitionPreset.cardStyleInterpolator,\r\n        headerStyleInterpolator = defaultTransitionPreset.headerStyleInterpolator,\r\n        cardOverlayEnabled = (Platform.OS !== 'ios' &&\r\n          optionsForTransitionConfig.presentation !== 'transparentModal') ||\r\n          getIsModalPresentation(cardStyleInterpolator),\r\n      } = optionsForTransitionConfig;\r\n\r\n      const headerMode: StackHeaderMode =\r\n        descriptor.options.headerMode ??\r\n        (!(\r\n          optionsForTransitionConfig.presentation === 'modal' ||\r\n          optionsForTransitionConfig.presentation === 'transparentModal' ||\r\n          nextDescriptor?.options.presentation === 'modal' ||\r\n          nextDescriptor?.options.presentation === 'transparentModal' ||\r\n          getIsModalPresentation(cardStyleInterpolator)\r\n        ) &&\r\n        Platform.OS === 'ios' &&\r\n        descriptor.options.header === undefined\r\n          ? 'float'\r\n          : 'screen');\r\n\r\n      const scene = {\r\n        route,\r\n        descriptor: {\r\n          ...descriptor,\r\n          options: {\r\n            ...descriptor.options,\r\n            animationEnabled,\r\n            cardOverlayEnabled,\r\n            cardStyleInterpolator,\r\n            gestureDirection,\r\n            gestureEnabled,\r\n            headerStyleInterpolator,\r\n            transitionSpec,\r\n            headerMode,\r\n          },\r\n        },\r\n        progress: {\r\n          current: getProgressFromGesture(\r\n            currentGesture,\r\n            state.layout,\r\n            descriptor\r\n          ),\r\n          next:\r\n            nextGesture &&\r\n            nextDescriptor?.options.presentation !== 'transparentModal'\r\n              ? getProgressFromGesture(\r\n                  nextGesture,\r\n                  state.layout,\r\n                  nextDescriptor\r\n                )\r\n              : undefined,\r\n          previous: previousGesture\r\n            ? getProgressFromGesture(\r\n                previousGesture,\r\n                state.layout,\r\n                previousDescriptor\r\n              )\r\n            : undefined,\r\n        },\r\n        __memo: [\r\n          state.layout,\r\n          descriptor,\r\n          nextDescriptor,\r\n          previousDescriptor,\r\n          currentGesture,\r\n          nextGesture,\r\n          previousGesture,\r\n        ],\r\n      };\r\n\r\n      if (\r\n        oldScene &&\r\n        scene.__memo.every((it, i) => {\r\n          // @ts-expect-error: we haven't added __memo to the annotation to prevent usage elsewhere\r\n          return oldScene.__memo[i] === it;\r\n        })\r\n      ) {\r\n        return oldScene;\r\n      }\r\n\r\n      return scene;\r\n    });\r\n\r\n    return {\r\n      routes: props.routes,\r\n      scenes,\r\n      gestures,\r\n      descriptors: props.descriptors,\r\n      headerHeights: getHeaderHeights(\r\n        scenes,\r\n        props.insets,\r\n        props.isParentHeaderShown,\r\n        props.isParentModal,\r\n        state.layout,\r\n        state.headerHeights\r\n      ),\r\n    };\r\n  }\r\n\r\n  constructor(props: Props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      routes: [],\r\n      scenes: [],\r\n      gestures: {},\r\n      layout: SafeAreaProviderCompat.initialMetrics.frame,\r\n      descriptors: this.props.descriptors,\r\n      // Used when card's header is null and mode is float to make transition\r\n      // between screens with headers and those without headers smooth.\r\n      // This is not a great heuristic here. We don't know synchronously\r\n      // on mount what the header height is so we have just used the most\r\n      // common cases here.\r\n      headerHeights: {},\r\n    };\r\n  }\r\n\r\n  private handleLayout = (e: LayoutChangeEvent) => {\r\n    const { height, width } = e.nativeEvent.layout;\r\n\r\n    const layout = { width, height };\r\n\r\n    this.setState((state, props) => {\r\n      if (height === state.layout.height && width === state.layout.width) {\r\n        return null;\r\n      }\r\n\r\n      return {\r\n        layout,\r\n        headerHeights: getHeaderHeights(\r\n          state.scenes,\r\n          props.insets,\r\n          props.isParentHeaderShown,\r\n          props.isParentModal,\r\n          layout,\r\n          state.headerHeights\r\n        ),\r\n      };\r\n    });\r\n  };\r\n\r\n  private handleHeaderLayout = ({\r\n    route,\r\n    height,\r\n  }: {\r\n    route: Route<string>;\r\n    height: number;\r\n  }) => {\r\n    this.setState(({ headerHeights }) => {\r\n      const previousHeight = headerHeights[route.key];\r\n\r\n      if (previousHeight === height) {\r\n        return null;\r\n      }\r\n\r\n      return {\r\n        headerHeights: {\r\n          ...headerHeights,\r\n          [route.key]: height,\r\n        },\r\n      };\r\n    });\r\n  };\r\n\r\n  private getFocusedRoute = () => {\r\n    const { state } = this.props;\r\n\r\n    return state.routes[state.index];\r\n  };\r\n\r\n  private getPreviousScene = ({ route }: { route: Route<string> }) => {\r\n    const { getPreviousRoute } = this.props;\r\n    const { scenes } = this.state;\r\n\r\n    const previousRoute = getPreviousRoute({ route });\r\n\r\n    if (previousRoute) {\r\n      const previousScene = scenes.find(\r\n        (scene) => scene.descriptor.route.key === previousRoute.key\r\n      );\r\n\r\n      return previousScene;\r\n    }\r\n\r\n    return undefined;\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      insets,\r\n      state,\r\n      routes,\r\n      closingRouteKeys,\r\n      onOpenRoute,\r\n      onCloseRoute,\r\n      renderHeader,\r\n      renderScene,\r\n      isParentHeaderShown,\r\n      isParentModal,\r\n      onTransitionStart,\r\n      onTransitionEnd,\r\n      onGestureStart,\r\n      onGestureEnd,\r\n      onGestureCancel,\r\n      detachInactiveScreens = Platform.OS === 'web' ||\r\n        Platform.OS === 'android' ||\r\n        Platform.OS === 'ios',\r\n    } = this.props;\r\n\r\n    const { scenes, layout, gestures, headerHeights } = this.state;\r\n\r\n    const focusedRoute = state.routes[state.index];\r\n    const focusedHeaderHeight = headerHeights[focusedRoute.key];\r\n\r\n    const isFloatHeaderAbsolute = this.state.scenes.slice(-2).some((scene) => {\r\n      const options = scene.descriptor.options ?? {};\r\n      const { headerMode, headerTransparent, headerShown = true } = options;\r\n\r\n      if (\r\n        headerTransparent ||\r\n        headerShown === false ||\r\n        headerMode === 'screen'\r\n      ) {\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    });\r\n\r\n    let activeScreensLimit = 1;\r\n\r\n    for (let i = scenes.length - 1; i >= 0; i--) {\r\n      const { options } = scenes[i].descriptor;\r\n      const {\r\n        // By default, we don't want to detach the previous screen of the active one for modals\r\n        detachPreviousScreen = options.presentation === 'transparentModal'\r\n          ? false\r\n          : getIsModalPresentation(options.cardStyleInterpolator)\r\n          ? i !==\r\n            scenes\r\n              .map((scene) => scene.descriptor.options.cardStyleInterpolator)\r\n              .lastIndexOf(forModalPresentationIOS)\r\n          : true,\r\n      } = options;\r\n\r\n      if (detachPreviousScreen === false) {\r\n        activeScreensLimit++;\r\n      } else {\r\n        // Check at least last 2 screens before stopping\r\n        // This will make sure that screen isn't detached when another screen is animating on top of the transparent one\r\n        // For example, (Opaque -> Transparent -> Opaque)\r\n        if (i <= scenes.length - 2) {\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    const floatingHeader = (\r\n      <React.Fragment key=\"header\">\r\n        {renderHeader({\r\n          mode: 'float',\r\n          layout,\r\n          scenes,\r\n          getPreviousScene: this.getPreviousScene,\r\n          getFocusedRoute: this.getFocusedRoute,\r\n          onContentHeightChange: this.handleHeaderLayout,\r\n          style: [\r\n            styles.floating,\r\n            isFloatHeaderAbsolute && [\r\n              // Without this, the header buttons won't be touchable on Android when headerTransparent: true\r\n              { height: focusedHeaderHeight },\r\n              styles.absolute,\r\n            ],\r\n          ],\r\n        })}\r\n      </React.Fragment>\r\n    );\r\n\r\n    return (\r\n      <Background>\r\n        {isFloatHeaderAbsolute ? null : floatingHeader}\r\n        <MaybeScreenContainer\r\n          enabled={detachInactiveScreens}\r\n          style={styles.container}\r\n          onLayout={this.handleLayout}\r\n        >\r\n          {routes.map((route, index, self) => {\r\n            const focused = focusedRoute.key === route.key;\r\n            const gesture = gestures[route.key];\r\n            const scene = scenes[index];\r\n\r\n            // For the screens that shouldn't be active, the value is 0\r\n            // For those that should be active, but are not the top screen, the value is 1\r\n            // For those on top of the stack and with interaction enabled, the value is 2\r\n            // For the old implementation, it stays the same it was\r\n            let isScreenActive: Animated.AnimatedInterpolation | 2 | 1 | 0 = 1;\r\n\r\n            if (index < self.length - activeScreensLimit - 1) {\r\n              // screen should be inactive because it is too deep in the stack\r\n              isScreenActive = STATE_INACTIVE;\r\n            } else {\r\n              const sceneForActivity = scenes[self.length - 1];\r\n              const outputValue =\r\n                index === self.length - 1\r\n                  ? STATE_ON_TOP // the screen is on top after the transition\r\n                  : index >= self.length - activeScreensLimit\r\n                  ? STATE_TRANSITIONING_OR_BELOW_TOP // the screen should stay active after the transition, it is not on top but is in activeLimit\r\n                  : STATE_INACTIVE; // the screen should be active only during the transition, it is at the edge of activeLimit\r\n              isScreenActive = sceneForActivity\r\n                ? sceneForActivity.progress.current.interpolate({\r\n                    inputRange: [0, 1 - EPSILON, 1],\r\n                    outputRange: [1, 1, outputValue],\r\n                    extrapolate: 'clamp',\r\n                  })\r\n                : STATE_TRANSITIONING_OR_BELOW_TOP;\r\n            }\r\n\r\n            const {\r\n              headerShown = true,\r\n              headerTransparent,\r\n              headerStyle,\r\n              headerTintColor,\r\n              freezeOnBlur,\r\n            } = scene.descriptor.options;\r\n\r\n            const safeAreaInsetTop = insets.top;\r\n            const safeAreaInsetRight = insets.right;\r\n            const safeAreaInsetBottom = insets.bottom;\r\n            const safeAreaInsetLeft = insets.left;\r\n\r\n            const headerHeight =\r\n              headerShown !== false ? headerHeights[route.key] : 0;\r\n\r\n            let headerDarkContent: boolean | undefined;\r\n\r\n            if (headerShown) {\r\n              if (typeof headerTintColor === 'string') {\r\n                headerDarkContent = Color(headerTintColor).isDark();\r\n              } else {\r\n                const flattenedHeaderStyle = StyleSheet.flatten(headerStyle);\r\n\r\n                if (\r\n                  flattenedHeaderStyle &&\r\n                  'backgroundColor' in flattenedHeaderStyle &&\r\n                  typeof flattenedHeaderStyle.backgroundColor === 'string'\r\n                ) {\r\n                  headerDarkContent = !Color(\r\n                    flattenedHeaderStyle.backgroundColor\r\n                  ).isDark();\r\n                }\r\n              }\r\n            }\r\n\r\n            // Start from current card and count backwards the number of cards with same interpolation\r\n            const interpolationIndex = getInterpolationIndex(scenes, index);\r\n            const isModal = getIsModal(\r\n              scene,\r\n              interpolationIndex,\r\n              isParentModal\r\n            );\r\n\r\n            const isNextScreenTransparent =\r\n              scenes[index + 1]?.descriptor.options.presentation ===\r\n              'transparentModal';\r\n\r\n            const detachCurrentScreen =\r\n              scenes[index + 1]?.descriptor.options.detachPreviousScreen !==\r\n              false;\r\n\r\n            return (\r\n              <MaybeScreen\r\n                key={route.key}\r\n                style={StyleSheet.absoluteFill}\r\n                enabled={detachInactiveScreens}\r\n                active={isScreenActive}\r\n                freezeOnBlur={freezeOnBlur}\r\n                pointerEvents=\"box-none\"\r\n              >\r\n                <CardContainer\r\n                  index={index}\r\n                  interpolationIndex={interpolationIndex}\r\n                  modal={isModal}\r\n                  active={index === self.length - 1}\r\n                  focused={focused}\r\n                  closing={closingRouteKeys.includes(route.key)}\r\n                  layout={layout}\r\n                  gesture={gesture}\r\n                  scene={scene}\r\n                  safeAreaInsetTop={safeAreaInsetTop}\r\n                  safeAreaInsetRight={safeAreaInsetRight}\r\n                  safeAreaInsetBottom={safeAreaInsetBottom}\r\n                  safeAreaInsetLeft={safeAreaInsetLeft}\r\n                  onGestureStart={onGestureStart}\r\n                  onGestureCancel={onGestureCancel}\r\n                  onGestureEnd={onGestureEnd}\r\n                  headerHeight={headerHeight}\r\n                  isParentHeaderShown={isParentHeaderShown}\r\n                  onHeaderHeightChange={this.handleHeaderLayout}\r\n                  getPreviousScene={this.getPreviousScene}\r\n                  getFocusedRoute={this.getFocusedRoute}\r\n                  headerDarkContent={headerDarkContent}\r\n                  hasAbsoluteFloatHeader={\r\n                    isFloatHeaderAbsolute && !headerTransparent\r\n                  }\r\n                  renderHeader={renderHeader}\r\n                  renderScene={renderScene}\r\n                  onOpenRoute={onOpenRoute}\r\n                  onCloseRoute={onCloseRoute}\r\n                  onTransitionStart={onTransitionStart}\r\n                  onTransitionEnd={onTransitionEnd}\r\n                  isNextScreenTransparent={isNextScreenTransparent}\r\n                  detachCurrentScreen={detachCurrentScreen}\r\n                />\r\n              </MaybeScreen>\r\n            );\r\n          })}\r\n        </MaybeScreenContainer>\r\n        {isFloatHeaderAbsolute ? floatingHeader : null}\r\n      </Background>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n  absolute: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n  },\r\n  floating: {\r\n    zIndex: 1,\r\n  },\r\n});\r\n"],"mappings":"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"}