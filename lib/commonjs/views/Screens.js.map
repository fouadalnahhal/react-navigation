{"version":3,"names":["Screens","require","e","MaybeScreenContainer","enabled","rest","MaybeScreen","active"],"sources":["Screens.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport { Animated, View, ViewProps } from 'react-native';\r\n\r\nlet Screens: typeof import('react-native-screens') | undefined;\r\n\r\ntry {\r\n  Screens = require('react-native-screens');\r\n} catch (e) {\r\n  // Ignore\r\n}\r\n\r\nexport const MaybeScreenContainer = ({\r\n  enabled,\r\n  ...rest\r\n}: ViewProps & {\r\n  enabled: boolean;\r\n  children: React.ReactNode;\r\n}) => {\r\n  if (Screens != null) {\r\n    return <Screens.ScreenContainer enabled={enabled} {...rest} />;\r\n  }\r\n\r\n  return <View {...rest} />;\r\n};\r\n\r\nexport const MaybeScreen = ({\r\n  enabled,\r\n  active,\r\n  ...rest\r\n}: ViewProps & {\r\n  enabled: boolean;\r\n  active: 0 | 1 | Animated.AnimatedInterpolation;\r\n  children: React.ReactNode;\r\n  freezeOnBlur?: boolean;\r\n}) => {\r\n  if (Screens != null) {\r\n    return (\r\n      <Screens.Screen enabled={enabled} activityState={active} {...rest} />\r\n    );\r\n  }\r\n\r\n  return <View {...rest} />;\r\n};\r\n"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;AAEA,IAAIA,OAAJ;;AAEA,IAAI;EACFA,OAAO,GAAGC,OAAO,CAAC,sBAAD,CAAjB;AACD,CAFD,CAEE,OAAOC,CAAP,EAAU,CACV;AACD;;AAEM,MAAMC,oBAAoB,GAAG,QAM9B;EAAA,IAN+B;IACnCC,OADmC;IAEnC,GAAGC;EAFgC,CAM/B;;EACJ,IAAIL,OAAO,IAAI,IAAf,EAAqB;IACnB,oBAAO,oBAAC,OAAD,CAAS,eAAT;MAAyB,OAAO,EAAEI;IAAlC,GAA+CC,IAA/C,EAAP;EACD;;EAED,oBAAO,oBAAC,iBAAD,EAAUA,IAAV,CAAP;AACD,CAZM;;;;AAcA,MAAMC,WAAW,GAAG,SASrB;EAAA,IATsB;IAC1BF,OAD0B;IAE1BG,MAF0B;IAG1B,GAAGF;EAHuB,CAStB;;EACJ,IAAIL,OAAO,IAAI,IAAf,EAAqB;IACnB,oBACE,oBAAC,OAAD,CAAS,MAAT;MAAgB,OAAO,EAAEI,OAAzB;MAAkC,aAAa,EAAEG;IAAjD,GAA6DF,IAA7D,EADF;EAGD;;EAED,oBAAO,oBAAC,iBAAD,EAAUA,IAAV,CAAP;AACD,CAjBM"}